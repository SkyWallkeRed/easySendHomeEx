{"version":3,"sources":["../../../src/services/bankInformation/bankInformationService.js"],"names":["_","BI","BankInformationMain","config","bankInformationUrl","BankInformationService","getInformationBank","informationBank","code","filter","Bank_Code","String","searchString","resultArray","bank","includes","Bank_Name","push","sortNumber","a","b","bankCodeArray","branchCodeArray","Number","Branch_Code","unique_bankCodeArray","Set","unique_branchCodeArray","sort","query","name_string","branch_code","bank_code","result","searchMod","name","bankCode","branchNumber","bankMatchResult","match","filterByName","filterByBankCode","filterByBranchNumber","isEqual","nameString","bankInformationService"],"mappings":"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","file":"bankInformationService.js","sourcesContent":["import BankInformationMain from '../../services/bankInformation/bankInformation.main'\nimport config from './config'\nimport * as _ from 'lodash';\n\nconst BI = new BankInformationMain(config.bankInformationUrl);\n\n\nclass BankInformationService {\n    informationBank;\n\n    async getInformationBank() {\n        this.informationBank = await BI.getInformationBank();\n        return this.informationBank;\n    }\n\n    async getInformationByBankCode(code) { // code: number\n        if (!this.informationBank) {\n            this.informationBank = await this.getInformationBank();\n        }\n        return _.filter(this.informationBank, {Bank_Code: String(code)});\n    }\n\n    async getInformationByBankName(searchString) { // searchString: string\n        if (!this.informationBank) {\n            this.informationBank = await this.getInformationBank();\n        }\n        const resultArray = [];\n        for (let bank of this.informationBank) {\n            if (_.includes(bank.Bank_Name, searchString)) {\n                resultArray.push(bank);\n            }\n        }\n\n        return resultArray;\n    }\n\n    async getFilterPreSet() { // get preset of search params\n\n        if (!this.informationBank) {\n            this.informationBank = await this.getInformationBank();\n        }\n\n        const bankCodeArray = [];\n        const branchCodeArray = [];\n        for (let bank of this.informationBank) {\n            bankCodeArray.push(Number(bank.Bank_Code));\n            branchCodeArray.push(Number(bank.Branch_Code));\n        }\n        let unique_bankCodeArray = [...new Set(bankCodeArray)];\n        let unique_branchCodeArray = [...new Set(branchCodeArray)];\n\n        return {\n            bankCodeArray: unique_bankCodeArray.sort(sortNumber),\n            branchCodeArray: unique_branchCodeArray.sort(sortNumber)\n        };\n\n        function sortNumber(a, b) {\n            return a - b;\n        }\n    }\n\n    async getBankByQuery(query) { // add type\n        if (!this.informationBank) {\n            this.informationBank = await this.getInformationBank();\n        }\n        const name_string = query.name_string ? query.name_string : '';\n        const branch_code = query.branch_code ? query.branch_code : '';\n        const bank_code = query.bank_code ? query.bank_code : '';\n        const result = [];\n\n        const searchMod = {\n            name: (!!query.name_string),\n            bankCode: (!!query.bank_code),\n            branchNumber: (!!query.branch_code)\n        };\n\n        for (let bank of this.informationBank) {\n            const bankMatchResult = {\n                name: false,\n                bankCode: false,\n                branchNumber: false\n            };\n\n            if (searchMod.name) {\n                const match = filterByName(bank, name_string);\n                if (match) {\n                    bankMatchResult.name = true;\n                }\n            }\n            if (searchMod.bankCode) {\n                const match = filterByBankCode(bank, bank_code);\n                if (match) {\n                    bankMatchResult.bankCode = true;\n                }\n            }\n            if (searchMod.branchNumber) {\n                const match = filterByBranchNumber(bank, branch_code);\n                if (match) {\n                    bankMatchResult.branchNumber = true;\n                }\n            }\n            if (_.isEqual(searchMod, bankMatchResult)) {\n                result.push(bank);\n            }\n        }\n        return result;\n    }\n}\n\nfunction filterByName(bank, nameString) { // string\n    if (_.includes(bank.Bank_Name, nameString)) {\n        return bank;\n    } else {\n        return false;\n    }\n}\n\nfunction filterByBankCode(bank, code) { // num string\n    if (bank.Bank_Code === code) {\n        return bank;\n    }\n}\n\nfunction filterByBranchNumber(bank, code) { // num string\n    if (bank.Branch_Code === code) {\n        return bank;\n    }\n}\n\nconst bankInformationService = new BankInformationService();\nexport default bankInformationService;\n"]}