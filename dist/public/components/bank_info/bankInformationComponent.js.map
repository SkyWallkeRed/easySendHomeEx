{"version":3,"sources":["../../../../src/public/components/bank_info/bankInformationComponent.js"],"names":["ExampleComponent","container","titleValue","dataset","title","getFilterParams","render","innerHTML","markup","addEventListeners","option","selectBank","document","getElementById","branchSelect","bankOptions","bankCodeArray","branchoptions","branchCodeArray","forEach","item","createElement","value","textContent","appendChild","btn","textInput","bankCode","branchNumber","addEventListener","query","text","bankApi","dispatchEvent","CustomEvent","ref","Math","random","refs","init","scope","apiUrl","xhr","XMLHttpRequest","open","send","onload","status","console","log","statusText","response","length","onprogress","event","lengthComputable","data","JSON","parse","currentTarget","buildFilterDropDown","loaded","onerror","baseUrl","byQuery","byName","byCode","buildResult","result","singleResultContainer","template","Bank_Name","Branch_Address","City","Telephone","insertAdjacentHTML","cords","lat","Number","Y_Coordinate","lng","X_Coordinate","initMap","resultContainer","i","singlBank","classList","add","buildExtendedResult","newtemplate","info","expWraper","elementBuilder","name","buidEleWithText","address","tag","className","stringContent","newEle","createTextNode","ele","map","google","maps","Map","zoom","center","marker","Marker","position"],"mappings":"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","file":"bankInformationComponent.js","sourcesContent":["class ExampleComponent {\n\n    set title(title) {\n        this.titleValue = title;\n        this.render();\n    }\n\n    get title() {\n        return 'Bank Of Israel Information';\n    }\n\n    init(container) {\n        this.container = container;\n        this.titleValue = this.container.dataset.title;\n        this.getFilterParams();\n        this.render();\n    }\n\n    render() {\n        this.container.innerHTML = this.markup(this);\n        this.addEventListeners();\n    }\n\n    markup({title}) {\n        return `\n            <div class=\"navContainer\" id=\"navContainer\">\n            <h3 class=\"title\">${title}</h3>\n                  <input class=\"input-css\" type=\"text\" id=\"textInput\">\n                  <select class=\"select-css\" id=\"bankSelect\">\n                     <option value=\"\">Bank Code</option>         \n                  </select>     \n                  <select class=\"select-css\" id=\"branchSelect\">\n                        <option value=\"\">Branch Code</option>\n                  </select>\n            <button class=\"input-css\" type=\"button\" id=\"submitSearchBtn\">go</button>\n            \n                <div class=\"singleResultContainer\" id=\"singleResultContainer\"></div>\n        </div>\n        \n            <div id=\"resultContainer\"></div>\n    `;\n    }\n\n    buildFilterDropDown(option) { // {bankCodeArray:[num], branchCodeArray:[num]}\n        const selectBank = document.getElementById('bankSelect');\n        const branchSelect = document.getElementById('branchSelect');\n        const bankOptions = option.bankCodeArray;\n        const branchoptions = option.branchCodeArray;\n\n        bankOptions.forEach(function (item) {\n            option = document.createElement('option');\n            option.value = option.textContent = item;\n            selectBank.appendChild(option);\n        });\n\n        branchoptions.forEach(function (item) {\n            option = document.createElement('option');\n            option.value = option.textContent = item;\n            branchSelect.appendChild(option);\n        });\n    }\n\n    addEventListeners() {\n        const btn = document.getElementById('submitSearchBtn');\n        const textInput = document.getElementById('textInput');\n        const bankCode = document.getElementById('bankSelect');\n        const branchNumber = document.getElementById('branchSelect');\n\n        btn.addEventListener('click', () => {\n            const query = {\n                text: textInput.value || '',\n                bankCode: bankCode.value || '',\n                branchNumber: branchNumber.value || ''\n            };\n            this.bankApi(query);\n            this.container.dispatchEvent(new CustomEvent('click-me-was-clicked'));\n        });\n\n    }\n\n    constructor(container) {\n        if (typeof container.dataset.ref === 'undefined') {\n            this.ref = Math.random();\n            ExampleComponent.refs[this.ref] = this;\n            container.dataset.ref = this.ref;\n            this.init(container);\n        } else {\n            return ExampleComponent.refs[container.dataset.ref];\n        }\n\n    }\n\n    getFilterParams() {\n        const scope = this;\n        const apiUrl = '/api/public/bankJson/filter_params';\n        let xhr = new XMLHttpRequest(); // the constructor has no arguments\n        xhr.open('GET', `${apiUrl}`);\n        xhr.send();\n        // 4. This will be called after the response is received\n        xhr.onload = function () {\n            if (xhr.status != 200) { // analyze HTTP status of the response\n                console.log(`Error ${xhr.status}: ${xhr.statusText}`); // e.g. 404: Not Found\n            } else { // show the result\n                console.log(`Done, got ${xhr.response.length} bytes`); // responseText is the server\n            }\n        };\n\n        xhr.onprogress = function (event) {\n            if (event.lengthComputable) {\n                const data = JSON.parse(event.currentTarget.response);\n                scope.buildFilterDropDown(data);\n                return data;\n            } else {\n                console.log(`Received ${event.loaded} bytes`); // no Content-Length\n            }\n\n        };\n\n        xhr.onerror = function () {\n            console.log(\"Request failed\");\n        };\n    }\n\n    bankApi(query) { // make interface\n        const scope = this;\n\n        let apiUrl = '/api/public/bankJson';\n        const baseUrl = '/api/public/bankJson';\n        const byQuery = '/query';\n        const byName = '/by_name';\n        const byCode = '/by_code';\n\n        apiUrl = `${baseUrl}`;\n        if (query.text || query.bankCode || query.branchNumber) {\n            apiUrl = apiUrl + `${byQuery}?`;\n        }\n        if (query.text) {\n            apiUrl = apiUrl + `name_string=${query.text}&`;\n        }\n        if (query.bankCode) {\n            apiUrl = apiUrl + `bank_code=${query.bankCode}&`;\n        }\n        if (query.branchNumber) {\n            apiUrl = apiUrl + `branch_code=${query.branchNumber}`;\n        }\n        console.log('apiUrl', apiUrl);\n        let xhr = new XMLHttpRequest(); // the constructor has no arguments\n        xhr.open('GET', `${apiUrl}`);\n        xhr.send();\n        // 4. This will be called after the response is received\n        xhr.onload = function () {\n            if (xhr.status != 200) { // analyze HTTP status of the response\n                console.log(`Error ${xhr.status}: ${xhr.statusText}`); // e.g. 404: Not Found\n            } else { // show the result\n                console.log(`Done, got ${xhr.response.length} bytes`); // responseText is the server\n            }\n        };\n\n        xhr.onprogress = function (event) {\n            scope.buildResult([]);\n\n            if (event.lengthComputable) {\n                const data = JSON.parse(event.currentTarget.response);\n                scope.buildResult(data);\n                console.log(`server responce with ok, ${ data.length } results`,);\n            } else {\n                console.log(`Received ${event.loaded} bytes`); // no Content-Length\n            }\n        };\n\n        xhr.onerror = function () {\n            console.log(\"Request failed\");\n        };\n    }\n\n    buildExtendedResult(result) {\n        const singleResultContainer = document.getElementById('singleResultContainer');\n        singleResultContainer.innerHTML = '';\n        const template = `\n            <div class=\"textContainer\">\n            <p>${result.Bank_Name}</p>\n            <p>${result.Branch_Address}</p>\n            <p>${result.City}</p>\n            <p>${result.Telephone}</p>\n            </div>\n            <div style=\" max-height: 200px\" id=\"map\"></div>\n        `;\n        singleResultContainer.insertAdjacentHTML('afterbegin', template);\n        const cords = {lat: Number(result.Y_Coordinate), lng: Number(result.X_Coordinate)};\n        this.initMap(cords);\n    }\n\n    buildResult(data) {\n        const scope = this;\n        const resultContainer = document.getElementById(\"resultContainer\");\n        resultContainer.innerHTML = '';\n        for (let i = 0; i < data.length; i++) {\n            const singlBank = `<div id=\"${i}\"  class=\"bankInfoWrapper\"> \n                            <h4  class=\"bankName\">${data[i].Bank_Name}</h4>\n                            <span class=\"bankAddress\">${data[i].Branch_Address}</span>\n                          </div>`;\n\n            resultContainer.insertAdjacentHTML('afterbegin', singlBank);\n            document.getElementById(`${i}`).addEventListener('click', function () {\n                this.classList.add('expended');\n                scope.buildExtendedResult(data[i]);\n            });\n        }\n    }\n\n    buildByTemplate() {\n        const newtemplate = `<div>\n                            <input type=\"text\" placeholder=\"bank name\">\n                            <button type=\"button\">go</button>\n                         </div>`;\n        document.getElementById(\"resultContainer\").innerHTML = newtemplate;\n    }\n\n    buildExpandedInfo(info) { // return ele to appendChild\n        const expWraper = this.elementBuilder('div', 'wrapper');\n        const name = this.buidEleWithText('p', 'name', info.Bank_Name);\n        expWraper.appendChild(name);\n        const address = this.buidEleWithText('p', 'adress', info.Branch_Address);\n        expWraper.appendChild(address);\n\n        return expWraper;\n    }\n\n    buidEleWithText(tag, className, stringContent) {\n        const newEle = document.createElement(`${tag}`);\n        newEle.classList.add(`${className}`);\n        const text = document.createTextNode(`${stringContent}`);\n        newEle.appendChild(text);\n        return newEle;\n    }\n\n    elementBuilder(tag, className) {\n        const ele = document.createElement(`${tag}`);\n        ele.classList.add(`${className}`);\n        return ele;\n    }\n\n    initMap(cords) {\n        var map = new google.maps.Map(\n            document.getElementById('map'), {zoom: 14, center: cords});\n        var marker = new google.maps.Marker({position: cords, map: map});\n    }\n}\n\nExampleComponent.refs = {};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    new ExampleComponent(document.getElementById('bank-information'))\n});\n"]}