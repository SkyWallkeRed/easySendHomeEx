{"version":3,"sources":["../../../../src/public/components/test_comp/test_comp.js"],"names":["ExampleComponent","container","titleValue","dataset","title","render","innerHTML","markup","pageElement","querySelector","addEventListeners","ref","Math","random","refs","init","document","addEventListener","getElementById"],"mappings":";;;;;;IAAMA,gB;;;6BAUGC,S,EAAW;AACZ,iBAAKA,SAAL,GAAiBA,SAAjB;AACA,iBAAKC,UAAL,GAAkB,KAAKD,SAAL,CAAeE,OAAf,CAAuBC,KAAzC;AACA,iBAAKC,MAAL;AACH;;;iCAEQ;AACL,iBAAKJ,SAAL,CAAeK,SAAf,GAA2BN,iBAAiBO,MAAjB,CAAwB,IAAxB,CAA3B;AACA,iBAAKC,WAAL,GAAmB,KAAKP,SAAL,CAAeQ,aAAf,CAA6B,wBAA7B,CAAnB;AACA;AACA;;AAEA,iBAAKC,iBAAL;AACH;;;4CAYmB;AAChB;AACA;AACH;;;0BArCSN,K,EAAO;AACb,iBAAKF,UAAL,GAAkBE,KAAlB;AACA,iBAAKC,MAAL;AACH,S;4BAEW;AACR,mBAAO,4BAAP;AACH;;;qCAiBsB;AAAA,gBAARD,KAAQ,QAARA,KAAQ;;AACnB,+EAEUA,KAFV;AAOH;;;AAOD,8BAAYH,SAAZ,EAAuB;AAAA;;AACnB;AACA,YAAI,OAAOA,UAAUE,OAAV,CAAkBQ,GAAzB,KAAiC,WAArC,EAAkD;AAC9C,iBAAKA,GAAL,GAAWC,KAAKC,MAAL,EAAX;AACAb,6BAAiBc,IAAjB,CAAsB,KAAKH,GAA3B,IAAkC,IAAlC;AACAV,sBAAUE,OAAV,CAAkBQ,GAAlB,GAAwB,KAAKA,GAA7B;AACA,iBAAKI,IAAL,CAAUd,SAAV;AACH,SALD,MAKO;AACH;AACA,mBAAOD,iBAAiBc,IAAjB,CAAsBb,UAAUE,OAAV,CAAkBQ,GAAxC,CAAP;AACH;AACJ;;;;;AAGLX,iBAAiBc,IAAjB,GAAwB,EAAxB;;AAEAE,SAASC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAChD,QAAIjB,gBAAJ,CAAqBgB,SAASE,cAAT,CAAwB,mBAAxB,CAArB;AACH,CAFD","file":"test_comp.js","sourcesContent":["class ExampleComponent {\n    set title(title) {\n        this.titleValue = title;\n        this.render();\n    }\n\n    get title() {\n        return 'Bank Of Israel Information';\n    }\n\n    init(container) {\n        this.container = container;\n        this.titleValue = this.container.dataset.title;\n        this.render();\n    }\n\n    render() {\n        this.container.innerHTML = ExampleComponent.markup(this);\n        this.pageElement = this.container.querySelector('.sub-component-example');\n        // this.clickMeButton = this.container.querySelector('.click-me');\n        // new AnotherExampleComponent(this.pageElement);\n\n        this.addEventListeners();\n    }\n\n    static markup({title}) {\n        return `\n        <div class=\"infoContainer\">\n            <h3>${title}</h3>\n            <input type=\"text\">\n            <button>go</button>\n        </div>\n    `;\n    }\n\n    addEventListeners() {\n        // this.clickMeButton().addEventListener('click', () =>\n        //     this.container.dispatchEvent(new CustomEvent('click-me-was-clicked')));\n    }\n\n    constructor(container) {\n        // The constructor should only contain the boiler plate code for finding or creating the reference.\n        if (typeof container.dataset.ref === 'undefined') {\n            this.ref = Math.random();\n            ExampleComponent.refs[this.ref] = this;\n            container.dataset.ref = this.ref;\n            this.init(container);\n        } else {\n            // If this element has already been instantiated, use the existing reference.\n            return ExampleComponent.refs[container.dataset.ref];\n        }\n    }\n}\n\nExampleComponent.refs = {};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    new ExampleComponent(document.getElementById('example-component'))\n});\n"]}