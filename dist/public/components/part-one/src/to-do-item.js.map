{"version":3,"sources":["../../../../../src/public/components/part-one/src/to-do-item.js"],"names":["template","document","createElement","innerHTML","TodoItem","_shadowRoot","attachShadow","appendChild","content","cloneNode","$item","querySelector","$removeButton","$text","$checkbox","addEventListener","e","dispatchEvent","CustomEvent","detail","index","hasAttribute","setAttribute","_renderTodoItem","name","oldValue","newValue","_text","_checked","_index","parseInt","classList","add","remove","removeAttribute","val","HTMLElement","window","customElements","define"],"mappings":";;;;;;;;;;AACA,IAAMA,WAAWC,SAASC,aAAT,CAAuB,UAAvB,CAAjB;AACAF,SAASG,SAAT;;IAuBMC,Q;;;AACF,wBAAc;AAAA;;AAAA;;AAEV,cAAKC,WAAL,GAAmB,MAAKC,YAAL,CAAkB,EAAE,QAAQ,MAAV,EAAlB,CAAnB;AACA,cAAKD,WAAL,CAAiBE,WAAjB,CAA6BP,SAASQ,OAAT,CAAiBC,SAAjB,CAA2B,IAA3B,CAA7B;;AAEA,cAAKC,KAAL,GAAa,MAAKL,WAAL,CAAiBM,aAAjB,CAA+B,OAA/B,CAAb;AACA,cAAKC,aAAL,GAAqB,MAAKP,WAAL,CAAiBM,aAAjB,CAA+B,QAA/B,CAArB;AACA,cAAKE,KAAL,GAAa,MAAKR,WAAL,CAAiBM,aAAjB,CAA+B,OAA/B,CAAb;AACA,cAAKG,SAAL,GAAiB,MAAKT,WAAL,CAAiBM,aAAjB,CAA+B,OAA/B,CAAjB;;AAEA,cAAKC,aAAL,CAAmBG,gBAAnB,CAAoC,OAApC,EAA6C,UAACC,CAAD,EAAO;AAChD,kBAAKC,aAAL,CAAmB,IAAIC,WAAJ,CAAgB,UAAhB,EAA4B,EAAEC,QAAQ,MAAKC,KAAf,EAA5B,CAAnB;AACH,SAFD;;AAIA,cAAKN,SAAL,CAAeC,gBAAf,CAAgC,OAAhC,EAAyC,UAACC,CAAD,EAAO;AAC5C,kBAAKC,aAAL,CAAmB,IAAIC,WAAJ,CAAgB,UAAhB,EAA4B,EAAEC,QAAQ,MAAKC,KAAf,EAA5B,CAAnB;AACH,SAFD;AAdU;AAiBb;;;;4CAEmB;AAChB,gBAAG,CAAC,KAAKC,YAAL,CAAkB,MAAlB,CAAJ,EAA+B;AAC3B,qBAAKC,YAAL,CAAkB,MAAlB,EAA0B,aAA1B;AACH;;AAED,iBAAKC,eAAL;AACH;;;iDAMwBC,I,EAAMC,Q,EAAUC,Q,EAAU;AAC/C,oBAAOF,IAAP;AACI,qBAAK,MAAL;AACI,yBAAKG,KAAL,GAAaD,QAAb;AACA;AACJ,qBAAK,SAAL;AACI,yBAAKE,QAAL,GAAgB,KAAKP,YAAL,CAAkB,SAAlB,CAAhB;AACA;AACJ,qBAAK,OAAL;AACI,yBAAKQ,MAAL,GAAcC,SAASJ,QAAT,CAAd;AACA;AATR;AAWH;;;0CAEiB;AACd,gBAAI,KAAKL,YAAL,CAAkB,SAAlB,CAAJ,EAAkC;AAC9B,qBAAKX,KAAL,CAAWqB,SAAX,CAAqBC,GAArB,CAAyB,WAAzB;AACA,qBAAKlB,SAAL,CAAeQ,YAAf,CAA4B,SAA5B,EAAuC,EAAvC;AACH,aAHD,MAGO;AACH,qBAAKZ,KAAL,CAAWqB,SAAX,CAAqBE,MAArB,CAA4B,WAA5B;AACA,qBAAKnB,SAAL,CAAeoB,eAAf,CAA+B,SAA/B;AACH;;AAED,iBAAKrB,KAAL,CAAWV,SAAX,GAAuB,KAAKwB,KAA5B;AACH;;;0BAESQ,G,EAAK;AACX,iBAAKb,YAAL,CAAkB,OAAlB,EAA2Ba,GAA3B;AACH,S;4BAEW;AACR,mBAAO,KAAKN,MAAZ;AACH;;;4BAEa;AACV,mBAAO,KAAKR,YAAL,CAAkB,SAAlB,CAAP;AACH,S;0BAEWc,G,EAAK;AACb,gBAAIA,GAAJ,EAAS;AACL,qBAAKb,YAAL,CAAkB,SAAlB,EAA6B,EAA7B;AACH,aAFD,MAEO;AACH,qBAAKY,eAAL,CAAqB,SAArB;AACH;AACJ;;;4BAhD+B;AAC5B,mBAAO,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,CAAP;AACH;;;;EA9BkBE,W;;AA+EvBC,OAAOC,cAAP,CAAsBC,MAAtB,CAA6B,YAA7B,EAA2CnC,QAA3C","file":"to-do-item.js","sourcesContent":["\nconst template = document.createElement('template');\ntemplate.innerHTML = `\n    <style>\n        :host {\n            display: block;\n            font-family: sans-serif;\n        }\n\n        .completed {\n            text-decoration: line-through;\n        }\n\n        button {\n            border: none;\n            cursor: pointer;\n        }\n    </style>\n    <li class=\"item\">\n        <input type=\"checkbox\">\n        <label></label>\n        <button>‚ùå</button>\n    </li>\n`;\n\nclass TodoItem extends HTMLElement {\n    constructor() {\n        super();\n        this._shadowRoot = this.attachShadow({ 'mode': 'open' });\n        this._shadowRoot.appendChild(template.content.cloneNode(true));\n\n        this.$item = this._shadowRoot.querySelector('.item');\n        this.$removeButton = this._shadowRoot.querySelector('button');\n        this.$text = this._shadowRoot.querySelector('label');\n        this.$checkbox = this._shadowRoot.querySelector('input');\n\n        this.$removeButton.addEventListener('click', (e) => {\n            this.dispatchEvent(new CustomEvent('onRemove', { detail: this.index }));\n        });\n\n        this.$checkbox.addEventListener('click', (e) => {\n            this.dispatchEvent(new CustomEvent('onToggle', { detail: this.index }));\n        });\n    }\n\n    connectedCallback() {\n        if(!this.hasAttribute('text')) {\n            this.setAttribute('text', 'placeholder');\n        }\n\n        this._renderTodoItem();\n    }\n\n    static get observedAttributes() {\n        return ['text', 'checked', 'index'];\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        switch(name){\n            case 'text':\n                this._text = newValue;\n                break;\n            case 'checked':\n                this._checked = this.hasAttribute('checked');\n                break;\n            case 'index':\n                this._index = parseInt(newValue);\n                break;\n        }\n    }\n\n    _renderTodoItem() {\n        if (this.hasAttribute('checked')) {\n            this.$item.classList.add('completed');\n            this.$checkbox.setAttribute('checked', '');\n        } else {\n            this.$item.classList.remove('completed');\n            this.$checkbox.removeAttribute('checked');\n        }\n        \n        this.$text.innerHTML = this._text;\n    }\n\n    set index(val) {\n        this.setAttribute('index', val);\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get checked() {\n        return this.hasAttribute('checked');\n    }\n\n    set checked(val) {\n        if (val) {\n            this.setAttribute('checked', '');\n        } else {\n            this.removeAttribute('checked');\n        }\n    }\n\n}\nwindow.customElements.define('to-do-item', TodoItem);\n"]}